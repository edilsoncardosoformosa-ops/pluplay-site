let voiceEnabled = false, currentQuestions = [], currentIndex = 0, score = 0; // InicializaÃ§Ã£o do quiz document.addEventListener("DOMContentLoaded", () => { // Gera ou recupera ID do usuÃ¡rio document.getElementById('userIdBox').value = localStorage.getItem('userId') || crypto.randomUUID(); document.getElementById('protectedContent').style.display = 'block'; // BotÃ£o copiar ID document.getElementById('copyIdBtn').addEventListener('click', () => { const text = document.getElementById('userIdBox').value; navigator.clipboard.writeText(text).then(() => alert('ID copiado!')); }); // BotÃ£o senha manual document.getElementById('confirmPassBtn').addEventListener('click', async () => { const pass = document.getElementById('manualPassInput').value.trim(); if (!pass) { alert('Senha nÃ£o informada'); return; } const res = await window.tryManualPass(pass); if (res.success) { alert('Acesso liberado via senha!'); renderUserAllowedNote(); } else alert(res.msg); }); // Toggle voz document.getElementById('toggleVoice').addEventListener('click', () => { voiceEnabled = !voiceEnabled; document.getElementById('toggleVoice').textContent = voiceEnabled ? "ðŸ”‡ Desativar Ler" : "ðŸ”Š Ativar Ler"; }); // Inicializa notas de usuÃ¡rio renderUserAllowedNote(); }); // Garantir que quizData seja um objeto com tÃ³picos if (!window.quizData) window.quizData = {}; if (Array.isArray(window.quizData)) { window.quizData = { "Lport": window.quizData }; } // Renderiza nota de usuÃ¡rio function renderUserAllowedNote() { const userId = localStorage.getItem('userId'); const noteDiv = document.getElementById('userAllowedNote'); if (window.allowedUsers.includes(userId)) { noteDiv.innerHTML = <strong style="color:green">Acesso liberado!</strong>; } else noteDiv.textContent = "Demo: acesso limitado a 5 questÃµes por tÃ³pico."; } // Iniciar quiz function startQuiz(topic) { let all = window.quizData[topic] || []; const allowed = window.allowedUsers.includes(localStorage.getItem('userId')); if (!allowed) all = all.slice(0, 5); // demo limitado if (all.length === 0) { alert("Sem questÃµes neste tÃ³pico."); return; } const num = parseInt(document.getElementById("numQuestions").value) || 10; currentQuestions = shuffle(all).slice(0, num); currentIndex = 0; score = 0; document.getElementById('protectedContent').style.display = 'none'; document.getElementById('quiz').style.display = 'block'; showQuestion(); } // Exibir questÃ£o atual function showQuestion() { if (currentIndex >= currentQuestions.length) { endQuiz(); return; } const q = currentQuestions[currentIndex]; document.getElementById('question').textContent = q.q; document.getElementById('comment').textContent = ''; document.getElementById('counter').textContent = QuestÃ£o ${currentIndex + 1} de ${currentQuestions.length}; if (voiceEnabled) { let u = new SpeechSynthesisUtterance(q.q); u.lang = 'pt-BR'; u.rate = 1.5; window.speechSynthesis.cancel(); window.speechSynthesis.speak(u); } } // Responder questÃ£o function answer(choice) { const q = currentQuestions[currentIndex]; const txt = (choice === q.a ? "âœ“ Correto! " : "âœ— Errado! ") + (q.c || ''); document.getElementById('comment').textContent = txt; if (choice === q.a) score++; if (voiceEnabled) { let u = new SpeechSynthesisUtterance(txt); u.lang = 'pt-BR'; u.rate = 1.2; window.speechSynthesis.speak(u); } } // PrÃ³xima questÃ£o function nextQuestion() { currentIndex++; showQuestion(); } // Voltar ao menu function backToMenu() { document.getElementById('quiz').style.display = 'none'; document.getElementById('result').style.display = 'none'; document.getElementById('protectedContent').style.display = 'block'; } // Finalizar quiz function endQuiz() { document.getElementById('quiz').style.display = 'none'; document.getElementById('result').style.display = 'block'; document.getElementById('score').textContent = VocÃª acertou ${score} de ${currentQuestions.length} questÃµes.; } // Reiniciar quiz function restartQuiz() { document.getElementById('result').style.display = 'none'; document.getElementById('protectedContent').style.display = 'block'; } // Embaralhar array function shuffle(a) { return a.slice().sort(() => Math.random() - 0.5); } o save.php que usa para ligar maste.html aos curso1.html e curso2.html <?php $data = file_get_contents("php://input"); if(!$data){ echo "Nenhum dado recebido"; exit; } $file = "controle.js"; $versionFile = "version.txt"; $js = "var quizData = " . $data . ";"; if(file_put_contents($file, $js)){ // gera versÃ£o nova (timestamp) $version = time(); file_put_contents($versionFile, $version); echo "Banco salvo em controle.js (versÃ£o $version)"; }else{ echo "Erro ao salvar"; } ?>